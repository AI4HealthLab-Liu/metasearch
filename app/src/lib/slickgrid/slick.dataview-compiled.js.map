{"version":3,"sources":["slick.dataview.js"],"names":[],"mappings":"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","file":"slick.dataview-compiled.js","sourcesContent":["(function ($) {\n  $.extend(true, window, {\n    Slick: {\n      Data: {\n        DataView: DataView,\n        Aggregators: {\n          Avg: AvgAggregator,\n          Min: MinAggregator,\n          Max: MaxAggregator,\n          Sum: SumAggregator\n        }\n      }\n    }\n  });\n\n\n  /***\n   * A sample Model implementation.\n   * Provides a filtered view of the underlying data.\n   *\n   * Relies on the data item having an \"id\" property uniquely identifying it.\n   */\n  function DataView(options) {\n    var self = this;\n\n    var defaults = {\n      groupItemMetadataProvider: null,\n      inlineFilters: false\n    };\n\n\n    // private\n    var idProperty = \"id\";  // property holding a unique row id\n    var items = [];         // data by index\n    var rows = [];          // data by row\n    var idxById = {};       // indexes by id\n    var rowsById = null;    // rows by id; lazy-calculated\n    var filter = null;      // filter function\n    var updated = null;     // updated item ids\n    var suspend = false;    // suspends the recalculation\n    var sortAsc = true;\n    var fastSortField;\n    var sortComparer;\n    var refreshHints = {};\n    var prevRefreshHints = {};\n    var filterArgs;\n    var filteredItems = [];\n    var compiledFilter;\n    var compiledFilterWithCaching;\n    var filterCache = [];\n\n    // grouping\n    var groupingGetter;\n    var groupingGetterIsAFn;\n    var groupingFormatter;\n    var groupingComparer;\n    var groups = [];\n    var collapsedGroups = {};\n    var aggregators;\n    var aggregateCollapsed = false;\n    var compiledAccumulators;\n\n    var pagesize = 0;\n    var pagenum = 0;\n    var totalRows = 0;\n\n    // events\n    var onRowCountChanged = new Slick.Event();\n    var onRowsChanged = new Slick.Event();\n    var onPagingInfoChanged = new Slick.Event();\n\n    options = $.extend(true, {}, defaults, options);\n\n\n    function beginUpdate() {\n      suspend = true;\n    }\n\n    function endUpdate() {\n      suspend = false;\n      refresh();\n    }\n\n    function setRefreshHints(hints) {\n      refreshHints = hints;\n    }\n\n    function setFilterArgs(args) {\n      filterArgs = args;\n    }\n\n    function updateIdxById(startingIndex) {\n      startingIndex = startingIndex || 0;\n      var id;\n      for (var i = startingIndex, l = items.length; i < l; i++) {\n        id = items[i][idProperty];\n        if (id === undefined) {\n          throw \"Each data element must implement a unique 'id' property\";\n        }\n        idxById[id] = i;\n      }\n    }\n\n    function ensureIdUniqueness() {\n      var id;\n      for (var i = 0, l = items.length; i < l; i++) {\n        id = items[i][idProperty];\n        if (id === undefined || idxById[id] !== i) {\n          throw \"Each data element must implement a unique 'id' property\";\n        }\n      }\n    }\n\n    function getItems() {\n      return items;\n    }\n\n    function setItems(data, objectIdProperty) {\n      if (objectIdProperty !== undefined) {\n        idProperty = objectIdProperty;\n      }\n      items = filteredItems = data;\n      idxById = {};\n      updateIdxById();\n      ensureIdUniqueness();\n      refresh();\n    }\n\n    function setPagingOptions(args) {\n      if (args.pageSize != undefined) {\n        pagesize = args.pageSize;\n        pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\n      }\n\n      if (args.pageNum != undefined) {\n        pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\n      }\n\n      onPagingInfoChanged.notify(getPagingInfo(), null, self);\n\n      refresh();\n    }\n\n    function getPagingInfo() {\n      var totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\n      return {pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages};\n    }\n\n    function sort(comparer, ascending) {\n      sortAsc = ascending;\n      sortComparer = comparer;\n      fastSortField = null;\n      if (ascending === false) {\n        items.reverse();\n      }\n      items.sort(comparer);\n      if (ascending === false) {\n        items.reverse();\n      }\n      idxById = {};\n      updateIdxById();\n      refresh();\n    }\n\n    /***\n     * Provides a workaround for the extremely slow sorting in IE.\n     * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\n     * to return the value of that field and then doing a native Array.sort().\n     */\n    function fastSort(field, ascending) {\n      sortAsc = ascending;\n      fastSortField = field;\n      sortComparer = null;\n      var oldToString = Object.prototype.toString;\n      Object.prototype.toString = (typeof field == \"function\") ? field : function () {\n        return this[field]\n      };\n      // an extra reversal for descending sort keeps the sort stable\n      // (assuming a stable native sort implementation, which isn't true in some cases)\n      if (ascending === false) {\n        items.reverse();\n      }\n      items.sort();\n      Object.prototype.toString = oldToString;\n      if (ascending === false) {\n        items.reverse();\n      }\n      idxById = {};\n      updateIdxById();\n      refresh();\n    }\n\n    function reSort() {\n      if (sortComparer) {\n        sort(sortComparer, sortAsc);\n      } else if (fastSortField) {\n        fastSort(fastSortField, sortAsc);\n      }\n    }\n\n    function setFilter(filterFn) {\n      filter = filterFn;\n      if (options.inlineFilters) {\n        compiledFilter = compileFilter();\n        compiledFilterWithCaching = compileFilterWithCaching();\n      }\n      refresh();\n    }\n\n    function groupBy(valueGetter, valueFormatter, sortComparer) {\n      if (!options.groupItemMetadataProvider) {\n        options.groupItemMetadataProvider = new Slick.Data.GroupItemMetadataProvider();\n      }\n\n      groupingGetter = valueGetter;\n      groupingGetterIsAFn = typeof groupingGetter === \"function\";\n      groupingFormatter = valueFormatter;\n      groupingComparer = sortComparer;\n      collapsedGroups = {};\n      groups = [];\n      refresh();\n    }\n\n    function setAggregators(groupAggregators, includeCollapsed) {\n      aggregators = groupAggregators;\n      aggregateCollapsed = (includeCollapsed !== undefined)\n          ? includeCollapsed : aggregateCollapsed;\n\n      // pre-compile accumulator loops\n      compiledAccumulators = [];\n      var idx = aggregators.length;\n      while (idx--) {\n        compiledAccumulators[idx] = compileAccumulatorLoop(aggregators[idx]);\n      }\n\n      refresh();\n    }\n\n    function getItemByIdx(i) {\n      return items[i];\n    }\n\n    function getIdxById(id) {\n      return idxById[id];\n    }\n\n    function ensureRowsByIdCache() {\n      if (!rowsById) {\n        rowsById = {};\n        for (var i = 0, l = rows.length; i < l; i++) {\n          rowsById[rows[i][idProperty]] = i;\n        }\n      }\n    }\n\n    function getRowById(id) {\n      ensureRowsByIdCache();\n      return rowsById[id];\n    }\n\n    function getItemById(id) {\n      return items[idxById[id]];\n    }\n\n    function mapIdsToRows(idArray) {\n      var rows = [];\n      ensureRowsByIdCache();\n      for (var i = 0; i < idArray.length; i++) {\n        var row = rowsById[idArray[i]];\n        if (row != null) {\n          rows[rows.length] = row;\n        }\n      }\n      return rows;\n    }\n\n    function mapRowsToIds(rowArray) {\n      var ids = [];\n      for (var i = 0; i < rowArray.length; i++) {\n        if (rowArray[i] < rows.length) {\n          ids[ids.length] = rows[rowArray[i]][idProperty];\n        }\n      }\n      return ids;\n    }\n\n    function updateItem(id, item) {\n      if (idxById[id] === undefined || id !== item[idProperty]) {\n        throw \"Invalid or non-matching id\";\n      }\n      items[idxById[id]] = item;\n      if (!updated) {\n        updated = {};\n      }\n      updated[id] = true;\n      refresh();\n    }\n\n    function insertItem(insertBefore, item) {\n      items.splice(insertBefore, 0, item);\n      updateIdxById(insertBefore);\n      refresh();\n    }\n\n    function addItem(item) {\n      items.push(item);\n      updateIdxById(items.length - 1);\n      refresh();\n    }\n\n    function deleteItem(id) {\n      var idx = idxById[id];\n      if (idx === undefined) {\n        throw \"Invalid id\";\n      }\n      delete idxById[id];\n      items.splice(idx, 1);\n      updateIdxById(idx);\n      refresh();\n    }\n\n    function getLength() {\n      return rows.length;\n    }\n\n    function getItem(i) {\n      return rows[i];\n    }\n\n    function getItemMetadata(i) {\n      var item = rows[i];\n      if (item === undefined) {\n        return null;\n      }\n\n      // overrides for group rows\n      if (item.__group) {\n        return options.groupItemMetadataProvider.getGroupRowMetadata(item);\n      }\n\n      // overrides for totals rows\n      if (item.__groupTotals) {\n        return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\n      }\n\n      return null;\n    }\n\n    function collapseGroup(groupingValue) {\n      collapsedGroups[groupingValue] = true;\n      refresh();\n    }\n\n    function expandGroup(groupingValue) {\n      delete collapsedGroups[groupingValue];\n      refresh();\n    }\n\n    function getGroups() {\n      return groups;\n    }\n\n    function extractGroups(rows) {\n      var group;\n      var val;\n      var groups = [];\n      var groupsByVal = [];\n      var r;\n\n      for (var i = 0, l = rows.length; i < l; i++) {\n        r = rows[i];\n        val = (groupingGetterIsAFn) ? groupingGetter(r) : r[groupingGetter];\n        val = val || 0;\n        group = groupsByVal[val];\n        if (!group) {\n          group = new Slick.Group();\n          group.count = 0;\n          group.value = val;\n          group.rows = [];\n          groups[groups.length] = group;\n          groupsByVal[val] = group;\n        }\n\n        group.rows[group.count++] = r;\n      }\n\n      return groups;\n    }\n\n    // TODO:  lazy totals calculation\n    function calculateGroupTotals(group) {\n      if (group.collapsed && !aggregateCollapsed) {\n        return;\n      }\n\n      // TODO:  try moving iterating over groups into compiled accumulator\n      var totals = new Slick.GroupTotals();\n      var agg, idx = aggregators.length;\n      while (idx--) {\n        agg = aggregators[idx];\n        agg.init();\n        compiledAccumulators[idx].call(agg, group.rows);\n        agg.storeResult(totals);\n      }\n      totals.group = group;\n      group.totals = totals;\n    }\n\n    function calculateTotals(groups) {\n      var idx = groups.length;\n      while (idx--) {\n        calculateGroupTotals(groups[idx]);\n      }\n    }\n\n    function finalizeGroups(groups) {\n      var idx = groups.length, g;\n      while (idx--) {\n        g = groups[idx];\n        g.collapsed = (g.value in collapsedGroups);\n        g.title = groupingFormatter ? groupingFormatter(g) : g.value;\n      }\n    }\n\n    function flattenGroupedRows(groups) {\n      var groupedRows = [], gl = 0, g;\n      for (var i = 0, l = groups.length; i < l; i++) {\n        g = groups[i];\n        groupedRows[gl++] = g;\n\n        if (!g.collapsed) {\n          for (var j = 0, jj = g.rows.length; j < jj; j++) {\n            groupedRows[gl++] = g.rows[j];\n          }\n        }\n\n        if (g.totals && (!g.collapsed || aggregateCollapsed)) {\n          groupedRows[gl++] = g.totals;\n        }\n      }\n      return groupedRows;\n    }\n\n    function getFunctionInfo(fn) {\n      var fnRegex = /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\n      var matches = fn.toString().match(fnRegex);\n      return {\n        params: matches[1].split(\",\"),\n        body: matches[2]\n      };\n    }\n\n    function compileAccumulatorLoop(aggregator) {\n      var accumulatorInfo = getFunctionInfo(aggregator.accumulate);\n      var fn = new Function(\n          \"_items\",\n          \"for (var \" + accumulatorInfo.params[0] + \", _i=0, _il=_items.length; _i<_il; _i++) {\" +\n              accumulatorInfo.params[0] + \" = _items[_i]; \" +\n              accumulatorInfo.body +\n              \"}\"\n      );\n      fn.displayName = fn.name = \"compiledAccumulatorLoop\";\n      return fn;\n    }\n\n    function compileFilter() {\n      var filterInfo = getFunctionInfo(filter);\n\n      var filterBody = filterInfo.body\n          .replace(/return false[;}]/gi, \"{ continue _coreloop; }\")\n          .replace(/return true[;}]/gi, \"{ _retval[_idx++] = $item$; continue _coreloop; }\")\n          .replace(/return ([^;}]+?);/gi,\n          \"{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }\");\n\n      // This preserves the function template code after JS compression,\n      // so that replace() commands still work as expected.\n      var tpl = [\n        //\"function(_items, _args) { \",\n        \"var _retval = [], _idx = 0; \",\n        \"var $item$, $args$ = _args; \",\n        \"_coreloop: \",\n        \"for (var _i = 0, _il = _items.length; _i < _il; _i++) { \",\n        \"$item$ = _items[_i]; \",\n        \"$filter$; \",\n        \"} \",\n        \"return _retval; \"\n        //\"}\"\n      ].join(\"\");\n      tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n      tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n      tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n      var fn = new Function(\"_items,_args\", tpl);\n      fn.displayName = fn.name = \"compiledFilter\";\n      return fn;\n    }\n\n    function compileFilterWithCaching() {\n      var filterInfo = getFunctionInfo(filter);\n\n      var filterBody = filterInfo.body\n          .replace(/return false[;}]/gi, \"{ continue _coreloop; }\")\n          .replace(/return true[;}]/gi, \"{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }\")\n          .replace(/return ([^;}]+?);/gi,\n          \"{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }\");\n\n      // This preserves the function template code after JS compression,\n      // so that replace() commands still work as expected.\n      var tpl = [\n        //\"function(_items, _args, _cache) { \",\n        \"var _retval = [], _idx = 0; \",\n        \"var $item$, $args$ = _args; \",\n        \"_coreloop: \",\n        \"for (var _i = 0, _il = _items.length; _i < _il; _i++) { \",\n        \"$item$ = _items[_i]; \",\n        \"if (_cache[_i]) { \",\n        \"_retval[_idx++] = $item$; \",\n        \"continue _coreloop; \",\n        \"} \",\n        \"$filter$; \",\n        \"} \",\n        \"return _retval; \"\n        //\"}\"\n      ].join(\"\");\n      tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n      tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n      tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n      var fn = new Function(\"_items,_args,_cache\", tpl);\n      fn.displayName = fn.name = \"compiledFilterWithCaching\";\n      return fn;\n    }\n\n    function uncompiledFilter(items, args) {\n      var retval = [], idx = 0;\n\n      for (var i = 0, ii = items.length; i < ii; i++) {\n        if (filter(items[i], args)) {\n          retval[idx++] = items[i];\n        }\n      }\n\n      return retval;\n    }\n\n    function uncompiledFilterWithCaching(items, args, cache) {\n      var retval = [], idx = 0, item;\n\n      for (var i = 0, ii = items.length; i < ii; i++) {\n        item = items[i];\n        if (cache[i]) {\n          retval[idx++] = item;\n        } else if (filter(item, args)) {\n          retval[idx++] = item;\n          cache[i] = true;\n        }\n      }\n\n      return retval;\n    }\n\n    function getFilteredAndPagedItems(items) {\n      if (filter) {\n        var batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\n        var batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\n\n        if (refreshHints.isFilterNarrowing) {\n          filteredItems = batchFilter(filteredItems, filterArgs);\n        } else if (refreshHints.isFilterExpanding) {\n          filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\n        } else if (!refreshHints.isFilterUnchanged) {\n          filteredItems = batchFilter(items, filterArgs);\n        }\n      } else {\n        // special case:  if not filtering and not paging, the resulting\n        // rows collection needs to be a copy so that changes due to sort\n        // can be caught\n        filteredItems = pagesize ? items : items.concat();\n      }\n\n      // get the current page\n      var paged;\n      if (pagesize) {\n        if (filteredItems.length < pagenum * pagesize) {\n          pagenum = Math.floor(filteredItems.length / pagesize);\n        }\n        paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\n      } else {\n        paged = filteredItems;\n      }\n\n      return {totalRows: filteredItems.length, rows: paged};\n    }\n\n    function getRowDiffs(rows, newRows) {\n      var item, r, eitherIsNonData, diff = [];\n      var from = 0, to = newRows.length;\n\n      if (refreshHints && refreshHints.ignoreDiffsBefore) {\n        from = Math.max(0,\n            Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\n      }\n\n      if (refreshHints && refreshHints.ignoreDiffsAfter) {\n        to = Math.min(newRows.length,\n            Math.max(0, refreshHints.ignoreDiffsAfter));\n      }\n\n      for (var i = from, rl = rows.length; i < to; i++) {\n        if (i >= rl) {\n          diff[diff.length] = i;\n        } else {\n          item = newRows[i];\n          r = rows[i];\n\n          if ((groupingGetter && (eitherIsNonData = (item.__nonDataRow) || (r.__nonDataRow)) &&\n              item.__group !== r.__group ||\n              item.__updated ||\n              item.__group && !item.equals(r))\n              || (aggregators && eitherIsNonData &&\n              // no good way to compare totals since they are arbitrary DTOs\n              // deep object comparison is pretty expensive\n              // always considering them 'dirty' seems easier for the time being\n              (item.__groupTotals || r.__groupTotals))\n              || item[idProperty] != r[idProperty]\n              || (updated && updated[item[idProperty]])\n              ) {\n            diff[diff.length] = i;\n          }\n        }\n      }\n      return diff;\n    }\n\n    function recalc(_items) {\n      rowsById = null;\n\n      if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing ||\n          refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding) {\n        filterCache = [];\n      }\n\n      var filteredItems = getFilteredAndPagedItems(_items);\n      totalRows = filteredItems.totalRows;\n      var newRows = filteredItems.rows;\n\n      groups = [];\n      if (groupingGetter != null) {\n        groups = extractGroups(newRows);\n        if (groups.length) {\n          finalizeGroups(groups);\n          if (aggregators) {\n            calculateTotals(groups);\n          }\n          groups.sort(groupingComparer);\n          newRows = flattenGroupedRows(groups);\n        }\n      }\n\n      var diff = getRowDiffs(rows, newRows);\n\n      rows = newRows;\n\n      return diff;\n    }\n\n    function refresh() {\n      if (suspend) {\n        return;\n      }\n\n      var countBefore = rows.length;\n      var totalRowsBefore = totalRows;\n\n      var diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\n\n      // if the current page is no longer valid, go to last page and recalc\n      // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\n      if (pagesize && totalRows < pagenum * pagesize) {\n        pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\n        diff = recalc(items, filter);\n      }\n\n      updated = null;\n      prevRefreshHints = refreshHints;\n      refreshHints = {};\n\n      if (totalRowsBefore != totalRows) {\n        onPagingInfoChanged.notify(getPagingInfo(), null, self);\n      }\n      if (countBefore != rows.length) {\n        onRowCountChanged.notify({previous: countBefore, current: rows.length}, null, self);\n      }\n      if (diff.length > 0) {\n        onRowsChanged.notify({rows: diff}, null, self);\n      }\n    }\n\n    function syncGridSelection(grid, preserveHidden) {\n      var self = this;\n      var selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());;\n      var inHandler;\n\n      grid.onSelectedRowsChanged.subscribe(function(e, args) {\n        if (inHandler) { return; }\n        selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n      });\n\n      this.onRowsChanged.subscribe(function(e, args) {\n        if (selectedRowIds.length > 0) {\n          inHandler = true;\n          var selectedRows = self.mapIdsToRows(selectedRowIds);\n          if (!preserveHidden) {\n            selectedRowIds = self.mapRowsToIds(selectedRows);\n          }\n          grid.setSelectedRows(selectedRows);\n          inHandler = false;\n        }\n      });\n    }\n\n    function syncGridCellCssStyles(grid, key) {\n      var hashById;\n      var inHandler;\n\n      // since this method can be called after the cell styles have been set,\n      // get the existing ones right away\n      storeCellCssStyles(grid.getCellCssStyles(key));\n\n      function storeCellCssStyles(hash) {\n        hashById = {};\n        for (var row in hash) {\n          var id = rows[row][idProperty];\n          hashById[id] = hash[row];\n        }\n      }\n\n      grid.onCellCssStylesChanged.subscribe(function(e, args) {\n        if (inHandler) { return; }\n        if (key != args.key) { return; }\n        if (args.hash) {\n          storeCellCssStyles(args.hash);\n        }\n      });\n\n      this.onRowsChanged.subscribe(function(e, args) {\n        if (hashById) {\n          inHandler = true;\n          ensureRowsByIdCache();\n          var newHash = {};\n          for (var id in hashById) {\n            var row = rowsById[id];\n            if (row != undefined) {\n              newHash[row] = hashById[id];\n            }\n          }\n          grid.setCellCssStyles(key, newHash);\n          inHandler = false;\n        }\n      });\n    }\n\n    return {\n      // methods\n      \"beginUpdate\": beginUpdate,\n      \"endUpdate\": endUpdate,\n      \"setPagingOptions\": setPagingOptions,\n      \"getPagingInfo\": getPagingInfo,\n      \"getItems\": getItems,\n      \"setItems\": setItems,\n      \"setFilter\": setFilter,\n      \"sort\": sort,\n      \"fastSort\": fastSort,\n      \"reSort\": reSort,\n      \"groupBy\": groupBy,\n      \"setAggregators\": setAggregators,\n      \"collapseGroup\": collapseGroup,\n      \"expandGroup\": expandGroup,\n      \"getGroups\": getGroups,\n      \"getIdxById\": getIdxById,\n      \"getRowById\": getRowById,\n      \"getItemById\": getItemById,\n      \"getItemByIdx\": getItemByIdx,\n      \"mapRowsToIds\": mapRowsToIds,\n      \"mapIdsToRows\": mapIdsToRows,\n      \"setRefreshHints\": setRefreshHints,\n      \"setFilterArgs\": setFilterArgs,\n      \"refresh\": refresh,\n      \"updateItem\": updateItem,\n      \"insertItem\": insertItem,\n      \"addItem\": addItem,\n      \"deleteItem\": deleteItem,\n      \"syncGridSelection\": syncGridSelection,\n      \"syncGridCellCssStyles\": syncGridCellCssStyles,\n\n      // data provider methods\n      \"getLength\": getLength,\n      \"getItem\": getItem,\n      \"getItemMetadata\": getItemMetadata,\n\n      // events\n      \"onRowCountChanged\": onRowCountChanged,\n      \"onRowsChanged\": onRowsChanged,\n      \"onPagingInfoChanged\": onPagingInfoChanged\n    };\n  }\n\n  function AvgAggregator(field) {\n    this.field_ = field;\n\n    this.init = function () {\n      this.count_ = 0;\n      this.nonNullCount_ = 0;\n      this.sum_ = 0;\n    };\n\n    this.accumulate = function (item) {\n      var val = item[this.field_];\n      this.count_++;\n      if (val != null && val != \"\" && val != NaN) {\n        this.nonNullCount_++;\n        this.sum_ += parseFloat(val);\n      }\n    };\n\n    this.storeResult = function (groupTotals) {\n      if (!groupTotals.avg) {\n        groupTotals.avg = {};\n      }\n      if (this.nonNullCount_ != 0) {\n        groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\n      }\n    };\n  }\n\n  function MinAggregator(field) {\n    this.field_ = field;\n\n    this.init = function () {\n      this.min_ = null;\n    };\n\n    this.accumulate = function (item) {\n      var val = item[this.field_];\n      if (val != null && val != \"\" && val != NaN) {\n        if (this.min_ == null || val < this.min_) {\n          this.min_ = val;\n        }\n      }\n    };\n\n    this.storeResult = function (groupTotals) {\n      if (!groupTotals.min) {\n        groupTotals.min = {};\n      }\n      groupTotals.min[this.field_] = this.min_;\n    }\n  }\n\n  function MaxAggregator(field) {\n    this.field_ = field;\n\n    this.init = function () {\n      this.max_ = null;\n    };\n\n    this.accumulate = function (item) {\n      var val = item[this.field_];\n      if (val != null && val != \"\" && val != NaN) {\n        if (this.max_ == null || val > this.max_) {\n          this.max_ = val;\n        }\n      }\n    };\n\n    this.storeResult = function (groupTotals) {\n      if (!groupTotals.max) {\n        groupTotals.max = {};\n      }\n      groupTotals.max[this.field_] = this.max_;\n    }\n  }\n\n  function SumAggregator(field) {\n    this.field_ = field;\n\n    this.init = function () {\n      this.sum_ = null;\n    };\n\n    this.accumulate = function (item) {\n      var val = item[this.field_];\n      if (val != null && val != \"\" && val != NaN) {\n        this.sum_ += parseFloat(val);\n      }\n    };\n\n    this.storeResult = function (groupTotals) {\n      if (!groupTotals.sum) {\n        groupTotals.sum = {};\n      }\n      groupTotals.sum[this.field_] = this.sum_;\n    }\n  }\n\n  // TODO:  add more built-in aggregators\n  // TODO:  merge common aggregators in one to prevent needles iterating\n\n})(jQuery);"]}